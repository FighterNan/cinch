#------------------------------------------------------------------------------#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#------------------------------------------------------------------------------#

################################################################################
# Please Do Not Edit This File Unless You Know What You Are Doing!!!
#
# Any changes to the basic build template should be discussed with the
# project maintainers.
################################################################################

#------------------------------------------------------------------------------#
# Require some version of cmake
#------------------------------------------------------------------------------#

cmake_minimum_required(VERSION 2.8.12)

#------------------------------------------------------------------------------#
# Add path for cinch modules
#------------------------------------------------------------------------------#

list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cinch/cmake)

#------------------------------------------------------------------------------#
# Cinch includes
#------------------------------------------------------------------------------#

include(info)
include(insource)
include(subdirlist)
include(unit)
include(documentation)
include(version)

#------------------------------------------------------------------------------#
# Include project configuration
#------------------------------------------------------------------------------#

include(${CMAKE_CURRENT_SOURCE_DIR}/config/project.cmake)

#------------------------------------------------------------------------------#
# Create a version for the project
#------------------------------------------------------------------------------#

option(STATIC_VERSION
    "Set a static version (don't use 'git describe')" OFF)

if(STATIC_VERSION)
    set(${PROJECT_NAME}_VERSION ${STATIC_VERSION})
else()
    cinch_make_version()
endif(STATIC_VERSION)

#------------------------------------------------------------------------------#
# Keep users from creating insource builds.
#------------------------------------------------------------------------------#

cinch_prevent_insource_builds()

#------------------------------------------------------------------------------#
# Include project documentation
#------------------------------------------------------------------------------#

include(${CMAKE_CURRENT_SOURCE_DIR}/config/documentation.cmake)

#------------------------------------------------------------------------------#
# Add top-level targets
#------------------------------------------------------------------------------#

if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})

    #--------------------------------------------------------------------------#
    # This is a top-level build
    #--------------------------------------------------------------------------#

    add_custom_target(distclean rm -rf ${CMAKE_BINARY_DIR}/*)
    set(CINCH_CONFIG_INFOTAG)

    #--------------------------------------------------------------------------#
    # Add support for ctest
    #--------------------------------------------------------------------------#

    option(ENABLE_UNIT_TESTS "Enable unit testing" OFF)
    option(RUN_JENKINS "Generate jenkins xml output for every test" OFF)

    if(ENABLE_UNIT_TESTS)
        enable_testing()
        find_package(GTest QUIET)
        if(GTEST_FOUND)
          include_directories(GTEST_INCLUDE_DIRS)
        else()
          add_subdirectory(cinch/gtest)
          include_directories(cinch/gtest/include)
          set(GTEST_BOTH_LIBRARIES gtest gtest_main)
        endif()
    endif(ENABLE_UNIT_TESTS)

    #--------------------------------------------------------------------------#
    # Add support for Doxygen documentation
    #--------------------------------------------------------------------------#

    option(ENABLE_DOXYGEN "Enable Doxygen documentation build" OFF)

    if(ENABLE_DOXYGEN)
        find_package(Doxygen)

        if(NOT DOXYGEN_FOUND)
            message(FATAL_ERROR "Doxygen is needed to enable this option")
        endif(NOT DOXYGEN_FOUND)

        configure_file(${CMAKE_SOURCE_DIR}/doc/doxygen.conf.in
            ${CMAKE_BINARY_DIR}/doc/doxygen.conf)
        add_custom_target(doxygen ALL
            ${DOXYGEN} ${CMAKE_BINARY_DIR}/doc/doxygen.conf
            DEPENDS ${CMAKE_SOURCE_DIR}/doc/doxygen.conf.in)
    endif(ENABLE_DOXYGEN)

else()

    #--------------------------------------------------------------------------#
    # This is a submodule
    #--------------------------------------------------------------------------#

    set(CINCH_CONFIG_INFOTAG "${PROJECT_NAME}.")

endif(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})

#------------------------------------------------------------------------------#
# Set output directories for targets
#------------------------------------------------------------------------------#

# Global project settings
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

#------------------------------------------------------------------------------#
# Add sub-projects
#------------------------------------------------------------------------------#

if(CINCH_CONFIG_SUBPROJECTS)
    foreach(subproject ${CINCH_CONFIG_SUBPROJECTS})
        add_subdirectory(${subproject})
    endforeach(subproject)
endif(CINCH_CONFIG_SUBPROJECTS)

#------------------------------------------------------------------------------#
# Library target
#------------------------------------------------------------------------------#

if(CINCH_LIBRARY_TARGET)

    add_subdirectory(src)

    include_directories(${${CINCH_LIBRARY_TARGET}_INCDIRS})

    #--------------------------------------------------------------------------#
    # Generate info target
    #--------------------------------------------------------------------------#

    cinch_make_info("${CINCH_CONFIG_INFOTAG}main"
        "${${CINCH_LIBRARY_TARGET}_HEADERS}"
        "${${CINCH_LIBRARY_TARGET}_SOURCES}")

    #--------------------------------------------------------------------------#
    # Add a rule to build the library
    #--------------------------------------------------------------------------#

    add_library(${CINCH_LIBRARY_TARGET} ${${CINCH_LIBRARY_TARGET}_SOURCES}
        ${${CINCH_LIBRARY_TARGET}_HEADERS})

endif(CINCH_LIBRARY_TARGET)

#------------------------------------------------------------------------------#
# Application targets
#------------------------------------------------------------------------------#

if(CINCH_APPLICATION_DIRECTORY)
    add_subdirectory(${CINCH_APPLICATION_DIRECTORY})
endif(CINCH_APPLICATION_DIRECTORY)

#------------------------------------------------------------------------------#
# Formatting options for emacs and vim.
# vim: set tabstop=4 shiftwidth=4 expandtab :
#------------------------------------------------------------------------------#
